module.exports = [
  '要么做第一个，要么做最好的一个。',
  '信念和目标，必须永远洋溢在程序员内心。',
  '最累的时候，家人是你最好的归宿。',
  '程序员永远不会灭亡。他们只是cast成了void。',
  '真正的程序员认为自己比用户更明白用户需要什么。',
  '退一步海阔天空，这是一种应有的心境。',
  '过去的代码都是未经测试的代码。',
  '优秀的判断力来自经验，但经验来自于错误的判断。',
  '测试是来表明bug的存在而不是不存在。',
  '我们这个世界的一个问题是，蠢人信誓旦旦，智人满腹狐疑。',
  '一个好汉三个帮，程序员同样如此。',
  '看再多的书是学不全脚本的，要多实践。',
  '无私奉献不是天方夜谭，有时候，我们也可以做到。',
  '世界上只有两句真理：1、人一定会死。2、程序一定有bug。',
  'Unix很简单。但需要有一定天赋的人才能理解这种简单。',
  '程序中蕴含着很多的道理，唯有大彻大悟者方能体会其中的奥妙。',
  '编程中我们会遇到多少挫折？表放弃，沙漠尽头必是绿洲。',
  '做技术一定要一颗恒心，这样才不会半途而废。',
  '不要被对象、属性、方法等词汇所迷惑；最根本的是先了解最基础知识。',
  '请把书上的例子亲手到电脑上实践，即使配套光盘中有源文件。',
  '别指望看第一遍书就能记住和掌握什么——请看第二遍、第三遍。',
  '如果debug是一种消灭bug的过程，那编程就一定是把bug放进去的过程。',
  '知道一点东西，并不能说明你会写脚本，脚本是需要经验积累的。',
  '真正的程序员不接受团队开发的理念，除非他自己是头头。',
  '真正的程序员几乎不写代码的注释，如果注释很难写，它理所当然也很难读。',
  '任何傻瓜都能写出计算机可以理解的代码。好的程序员能写出人能读懂的代码。',
  '没有情调，不懂浪漫，也许这是程序员的一面，但拥有朴实无华的爱是他们的另一面。',
  '作为一个真正的程序员，首先应该尊重编程，热爱你所写下的程序，他是你的伙伴，而不是工具。',
  '程序员可以让步，却不可以退缩，可以羞涩，却不可以软弱，总之，程序员必须是勇敢的。',
  '编程是一种单调的生活，因此程序员比普通人需要更多的关怀，更多的友情。',
  '程序不是年轻的专利，但是，他属于年轻。',
  '一个100行的代码调试都可能会让程序员遇到很多挫折，所以，面对挫折，我们永远不能低头。',
  '调试完一个动态连接函数，固然值得兴奋，但真正的成功远还在无数个函数之后。',
  '程序是我的生命，但我相信爱她甚过爱我的生命。',
  '就算我们站在群山之颠，也别忘记雄鹰依旧能从我们头顶飞过。骄傲是比用JAVA进行底层开发更可笑的东西。',
  '这句话不是很文雅，彻底鄙视那些害怕别人超越自己而拒绝回答别人问题的程序员。',
  '如果调试一个程序让你很苦恼，千万不要放弃，成功永远在拐角之后，除非你走到拐角，否则你永远不知道你离他多远，所以，请记住，坚持不懈，直到成功。',
  '如果你喜欢底层开发，千万不要勉强自己去搞VC，找到你最真实的想法，程序员最不能忍受的就是万精油。',
  'IF（BOOL 学习= =FALSE）BOOL 落后=TRUE；不断的学习，我们才能不断的前进。',
  '你的一个程序有时正常有时不正常，而你已经完全遵循编程的规则，为什么？事实上我认为相信只要遵循别人所说就能得到想当然的结果的人其实是个傻瓜。',
  '非优秀的程序员常常把空间和时间消耗殆尽，优秀的程序员则总是有足够的空间和时间去完成编程任务，而且配合近乎完美。',
  '一个好的程序员应该是那种过单行线都要往两边看的人。— Doug Linder, 系统管理员',
  '任何一个工具，它的一个最重要的、同时也是最难以做到的方面就是对那些学习使用这个工具的人在使用习惯上的影响。如果这个工具是一种编程语言，那么，这种影响——不管我们是否喜欢——将是一种思考习惯上的影响。— Edsger Dijkstra, 计算机科学家',
  '抽象化是一种非常的不同于模糊化的东西 … 抽象的目的并不是为了模糊，而是为了创造出一种能让我们做到百分百精确的新语义。— Edsger Dijkstra',
  '除数学外，对本土语言的异常的精通会是一个计算机程序员的最宝贵的财富。— Edsger Dijkstra',
  'C语言很容易让你犯错误；C++看起来好一些，但当你用它时，你会发现会死的更惨。— Bjarne Stroustrup,C++语言的创始人',
  '解决问题大多数都很容易；找到问题出在哪里却很难。',
  '看看目前我们的计算机编程上的这种糟糕的状态，软件开发很显然仍然处于一种黑色艺术状态，仍然毫无工程规范可言。— 比尔克林顿，美国前总统',
  '长久以来一个问题一直困扰着我，为什么有些东西如此昂贵，如此的高科技，却毫无用处，就像我知道的，计算机虽然是台笨机器，却有能力做出难以置信的智能事情，而程序员虽然是一些聪明的人，但却老是做难以置信的傻事情。他们呀，简言之，是对绝配。— Bill Bryson, 作家, 出自《Notes from a Big Country》',
  '给与足够的眼球，所有的Bugs都很容易发现（例如，大量的beta测试，结对开发，所有的问题都能很快的发现和修复）— Eric S. Raymond, 程序员，开源软件的倡导者, 出自《The Cathedral and the Bazaar》',
  '高质量的代码就是对程序自己最好的注释。当你打算要添加注释时，问问自己，“我如何能改进编码以至于根本不需要添加注释？”改进你的代码，然后才是用注释使它更清楚。— Steve McConnell, 软件工程师，作家, 出自 《Code Complete》',
  '嘿，编译通过了!装包吧！',
  '任何优秀的大软件里面都是一个优秀的小程序。— Charles Antony Richard Hoare, 计算机科学家',
  '我们应该注意到，没有一个受过伦理教育的软件工程师会同意开发出“摧毁巴格达”的程序。然而基本的职业道德却可以要求他们开发出“摧毁城市”的程序，巴格达只是这个程序的一个参数。— Nathaniel S.Borenstein, 计算机科学家',
  '管理程序员就像是在放养一群猫。',
  '用代码行数来评估程序的开发进度，就好比是拿重量来评估一个飞机的建造进度。— 比尔盖茨，前微软总裁',
  '在一种编程语言中，即使有再多的好程序被诋毁指责，也要比被说成完美无缺好的多。— Bjarne Stroustrup, 出自 《The Design and Evolution of C++》',
  '程序应该是写给其他人读的，让机器来运行它只是一个附带功能。— Harold Abelson and Gerald Jay Sussman,计算机科学家和作者，出自《The Structure and Interpretation of Computer Programs》',
  '真正的程序员从来不注释他们的代码。如果你做不到这样，也就说明你不能使你的程序易于理解。',
  '简单是稳定的前提。— Edsger Dijkstra',
  '最初90%的开发工作将会用去你最初90%的开发时间。剩下的10%的开发量将会用去你另外一个90%的开发时间。— Tom Cargill, 贝尔实验室的面向对象编程专家',
  '对于增加一个功能点所付出的代价，你要明白的很重要的一点就是，它不仅仅指开发这个功能所消耗的时间。它同时还包括带来的额外的给以后扩展造成的困难。不错，任何的功能特性都是能实现的——只要有足够的时间。除了这些将来会出现的问题外，你最终还会使你的程序变得脆弱，最终连一个绝对简单的功能都越来越难以和现有的混乱的web结合起来。应对此问题的办法是你应只接受那些不会导致冲突的功能。— John Carmack, 计算机游戏开发',
  '性能的关键是精简，而不是一堆的优化用例。除非有真正显著的效果，否则一定要忍住你那些蠢蠢欲动的小微调的企图。— Jon Bently 和 M. Douglas McIlroy, 同为贝尔实验室的科学家',
  '用C写的最后的一个好东西就是舒伯特的第九交响乐。— Erwin Dieterich, 程序员',
  '使用C++的问题就在于 … 这种语言有一种很大的脾气，在你想做任何事情之前你必须把所有的知识都掌握才行。— Larry Wall, Perl语言的开发者',
  '开发的越早，程序花费你的时间越长。— Roy Carlson, 威斯康星州大学',
  '原型的价值就在于它对你的教育，而不是代码本身。— Alan Cooper, 软件作者, 出自《The Inmates are Running the Asylum》',
  '世上只有两种编程语言：一种是总是被人骂的，一种是从来没人用的。— Bjarne Stroustrup',
  '世上有两种设计软件的方法。一种是尽量的简化，以至于明显没有任何缺陷。而另一种是尽量复杂化，以至于找不到明显的缺陷。— Charles Antony Richard Hoare',
  '丑陋的程序和丑陋的吊桥一样：他们都容易坍塌，因为人类（尤其是工程师们）的审美定义跟人们对复杂事物的处理和理解密切相关。一种编程语言如果不能使你写出优美的代码，那它也就不能使你写出好的程序。— Eric S.Raymond',
  '数周的编程能省掉你几个小时的计划时间。',
  '当一种能够让程序员通过简单的英语来编程的编程语言诞生后，你会发现程序员们都不会说英语。',
  '疯狂的程序员决不是靠狂妄和拼命的程序员，而是能够脚踏实地，持续努力的程序员，一个程序员真正做到这两点，技术上去后，唯一能限制他的只有想象力，到那个时候才算“疯狂的程序员”，这种程序员，才能令对手无比恐惧。',
  '作为一个程序员，郁闷的事情是，面对一个代码块，却不敢去修改。更糟糕的是，这个代码块还是自己写的',
  '如果建筑工人盖房子的方式跟程序员写程序一样，那第一只飞来的啄木鸟就将毁掉人类文明',
  '当你选择了一种语言，意味着你还选择了一组技术、一个社区',
  '生命太短暂，不要去做一些根本没有人想要的东西。——Ash Maurya',
  '如果你交给某人一个程序，你将折磨他一整天；如果你教某人如何编写程序，你将折磨他一辈子。——David Leinweber',
  '软件设计有两种方式：一种方式是，使软件过于简单，明显没有缺陷；另一种方式是，使软件过于复杂，没有明显的缺陷。——C.A.R. Hoare',
  '其实，我尝试着使 Ruby 更自然，而不是简单。Ruby 看起来很简单，但内部是非常复杂的，就像我们的身体一样。——松本行弘，Ruby 之父',
  '大部分情况下，构建程序的过程本质上是对规范调试的过程。——Fred Brooks，《人月神话》作者',
  '软件开发往往是这样：最开始的 90% 代码占用了开始的 90% 的开发时间；剩下 10% 代码同样需要 90% 的开发时间。——Tom Cargill',
  '当你试图解决一个你不理解的问题时，复杂化就产成了。——Andy Boothe',
  '用几个小时来制定计划，可以节省几周的编程时间。—— 匿名',
  '控制复杂性是计算机编程的本质。—— Brian Kernighan',
  '计算机科学领域的所有问题都可以通过其他方式间接解决。——David Wheeler',
  '编程是两队人马在竞争：软件工程师努力设计出最大最好的连白痴都会使用的程序；而宇宙在拼命制造最大最好的白痴。到目前为止，宇宙是胜利者。—— Rick Cook',
  '调试一个初次见到的代码比重写代码要困难两倍。因此，按照定义，如果你写代码非常巧妙，那么没有人足够聪明来调试它。—— Brian W. Kernighan',
  '我不是一个伟大的程序员，我只是一个具有良好习惯的优秀程序员。― Kent Beck',
  '你们中大多数人都熟悉程序员的美德，有三种：那就是懒惰、急躁和傲慢。– Larry Wall，Perl 語言发明人',
  '任何一个傻瓜都会写能够让机器理解的代码，只有好的程序员才能写出人类可以理解的代码。——Martin Fowler',
  '靠代码行数来衡量开发进度，就像是凭重量来衡量飞机制造的进度。——比尔·盖茨',
  '这不是一个 bug，这只是一个未列出来的特性。——匿名',
  '作为一个程序员，郁闷的事情是，面对一个代码块，却不敢去修改。更糟糕的是，这个代码块还是自己写的。—— Peyton Jones',
  '它在我的机器上可以很好运行！——大部分程序员',
  '能说算不上什么，有本事就把你的代码给我看看。——Linus Torvalds，Linux 之父',
  '我认为对象就像是生物学里的细胞，或者网络中的一台计算机，只能够通过消息来通信——Alan Kay，Smalltalk 的发明人，面向对象之父',
  '当你选择了一种语言，意味着你还选择了一组技术、一个社区。——Joshua Bloch',
  '质量、速度、廉价，选择其中两个。——匿名',
  '过早的优化是罪恶之源。——Donald Knuth',
  '没有什么代码的执行速度比空代码更快。——Merb 核心原则',
  '如果你是房间里最聪明的人，那么你走错房间了。——匿名',
  '如果只需更改一个单一的代码行，你的部门需要花费多长时间？——Mary Poppendieck',
  '九个人不能让一个孩子在一个月内出生。——Fred Brooks，《人月神话》作者',
  '好代码本身就是最好的文档。当你需要添加一个注释时，你应该考虑如何修改代码才能不需要注释。——Steve McConnell，Code Complete 作者',
  '一个人在教会电脑之前，别说他真正理解这个东西了。——Donald Knuth',
  '你是否也有自己喜欢的名言，欢迎分享。',
  'UNIX很简单。但需要有一定天赋的人才能理解这种简单。——Dennis Ritchie',
  '软件在能够复用前必须先能用。——Ralph Johnson',
  '优秀的判断力来自经验，但经验来自于错误的判断。——Fred Brooks',
  '‘理论’是你知道是这样，但它却不好用。‘实践’是它很好用，但你不知道是为什么。程序员将理论和实践结合到一起：既不好用，也不知道是为什么。——佚名',
  '当你想在你的代码中找到一个错误时，这很难；当你认为你的代码是不会有错误时，这就更难了。——Steve McConnell 《代码大全》',
  '如果建筑工人盖房子的方式跟程序员写程序一样，那第一只飞来的啄木鸟就将毁掉人类文明。——Gerald Weinberg',
  '项目开发的六个阶段：1. 充满热情 2. 醒悟 3. 痛苦 4. 找出罪魁祸首 5. 惩罚无辜 6. 褒奖闲人——佚名',
  '优秀的代码是它自己最好的文档。当你考虑要添加一个注释时，问问自己，“如何能改进这段代码，以让它不需要注释？”——Steve McConnell 《代码大全》',
  '我们这个世界的一个问题是，蠢人信誓旦旦，智人满腹狐疑。——Bertrand Russell',
  '无论在排练中演示是如何的顺利(高效)，当面对真正的现场观众时，出现错误的可能性跟在场观看的人数成正比。——佚名',
  '罗马帝国崩溃的一个主要原因是，没有0，他们没有有效的方法表示他们的C程序成功的终止。——Robert Firth',
  'C程序员永远不会灭亡。他们只是cast成了void。——佚名',
  '如果debugging是一种消灭bug的过程，那编程就一定是把bug放进去的过程。——Edsger Dijkstra',
  '你要么要软件质量，要么要指针算法；两者不可兼得。——(Bertrand Meyer)',
  '有两种方法能写出没有错误的程序；但只有第三种好用。——Alan J. Perlis',
  '最初的90%的代码用去了最初90%的开发时间。余下的10%的代码用掉另外90%的开发时间。——Tom Cargill',
  '程序员和上帝打赌要开发出更大更好——傻瓜都会用的软件。而上帝却总能创造出更大更傻的傻瓜。所以，上帝总能赢。——Anon',
  '有两种软件设计的方式：一种是使它足够简单以致于明显没有缺陷，另一种则是使它足够复杂以致于没有明显的缺陷。 ——C.A.R. Hoare',
  '软件工程的目标是控制复杂度，而不是增加复杂性。——Dr. Pamela Zave',
];
